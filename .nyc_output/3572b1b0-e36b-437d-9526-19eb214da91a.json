{"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/EventEmitterController.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/EventEmitterController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":16}},"4":{"start":{"line":14,"column":24},"end":{"line":14,"column":26}},"5":{"start":{"line":15,"column":8},"end":{"line":24,"column":11}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":35}},"7":{"start":{"line":17,"column":31},"end":{"line":17,"column":54}},"8":{"start":{"line":18,"column":12},"end":{"line":23,"column":13}},"9":{"start":{"line":19,"column":32},"end":{"line":19,"column":68}},"10":{"start":{"line":20,"column":16},"end":{"line":20,"column":66}},"11":{"start":{"line":21,"column":16},"end":{"line":21,"column":58}},"12":{"start":{"line":22,"column":16},"end":{"line":22,"column":55}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":28},"end":{"line":25,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":30},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":45},"end":{"line":24,"column":9}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":3,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/EventEmitterController.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/EventEmitterController.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAEpC;;;;;GAKG;AACH,MAAa,6BAA8B,SAAQ,qBAAY;IAC7D,YAAY,UAAwB;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,EAAE;YAClC,SAAS,IAAI,SAAS,CAAC;YAEvB,IAAI,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3C,OAAO,YAAY,KAAK,CAAC,CAAC,EAAE;gBAC1B,MAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBACrD,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1C,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAhBD,sEAgBC","sourcesContent":["import {EventEmitter} from 'events';\n\n/**\n * Class for handling socket events.\n * It receives the data on chunks and emits events.\n * @class MessageEventEmitterController\n * @extends EventEmitter\n */\nexport class MessageEventEmitterController extends EventEmitter {\n  constructor(connection: EventEmitter) {\n    super();\n    let wholeData = '';\n    connection.on('data', (dataChunk) => {\n      wholeData += dataChunk;\n\n      let messageLimit = wholeData.indexOf('\\n');\n      while (messageLimit !== -1) {\n        const message = wholeData.substring(0, messageLimit);\n        wholeData = wholeData.substring(messageLimit + 1);\n        this.emit('message', JSON.parse(message));\n        messageLimit = wholeData.indexOf('\\n');\n      }\n    });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7a0e3261b99859232a8d4266a035f064807e4581","contentHash":"f7fedfe69d51c18f4c5fb3d37bce9c7ede4d4d18436456ecdf1aef37e47a3cbf"},"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/NotesApp.ts":{"path":"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/NotesApp.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"23":{"start":{"line":23,"column":11},"end":{"line":23,"column":38}},"24":{"start":{"line":29,"column":8},"end":{"line":29,"column":25}},"25":{"start":{"line":30,"column":8},"end":{"line":34,"column":10}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":39}},"27":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":58}},"29":{"start":{"line":55,"column":21},"end":{"line":55,"column":62}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":20}},"31":{"start":{"line":66,"column":8},"end":{"line":66,"column":27}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":28}},"33":{"start":{"line":68,"column":25},"end":{"line":68,"column":54}},"34":{"start":{"line":69,"column":8},"end":{"line":94,"column":9}},"35":{"start":{"line":70,"column":12},"end":{"line":74,"column":16}},"36":{"start":{"line":75,"column":12},"end":{"line":82,"column":14}},"37":{"start":{"line":85,"column":12},"end":{"line":93,"column":14}},"38":{"start":{"line":95,"column":8},"end":{"line":95,"column":30}},"39":{"start":{"line":101,"column":8},"end":{"line":101,"column":27}},"40":{"start":{"line":102,"column":25},"end":{"line":102,"column":59}},"41":{"start":{"line":103,"column":8},"end":{"line":122,"column":9}},"42":{"start":{"line":104,"column":25},"end":{"line":104,"column":48}},"43":{"start":{"line":105,"column":25},"end":{"line":105,"column":34}},"44":{"start":{"line":106,"column":26},"end":{"line":106,"column":36}},"45":{"start":{"line":107,"column":12},"end":{"line":113,"column":14}},"46":{"start":{"line":116,"column":12},"end":{"line":121,"column":14}},"47":{"start":{"line":123,"column":8},"end":{"line":123,"column":30}},"48":{"start":{"line":130,"column":22},"end":{"line":130,"column":24}},"49":{"start":{"line":131,"column":8},"end":{"line":131,"column":27}},"50":{"start":{"line":132,"column":8},"end":{"line":165,"column":9}},"51":{"start":{"line":133,"column":29},"end":{"line":133,"column":55}},"52":{"start":{"line":134,"column":12},"end":{"line":157,"column":13}},"53":{"start":{"line":135,"column":16},"end":{"line":144,"column":17}},"54":{"start":{"line":135,"column":29},"end":{"line":135,"column":30}},"55":{"start":{"line":136,"column":33},"end":{"line":136,"column":78}},"56":{"start":{"line":137,"column":34},"end":{"line":137,"column":44}},"57":{"start":{"line":138,"column":34},"end":{"line":138,"column":44}},"58":{"start":{"line":139,"column":20},"end":{"line":143,"column":23}},"59":{"start":{"line":145,"column":16},"end":{"line":149,"column":18}},"60":{"start":{"line":152,"column":16},"end":{"line":156,"column":18}},"61":{"start":{"line":160,"column":12},"end":{"line":164,"column":14}},"62":{"start":{"line":166,"column":8},"end":{"line":166,"column":30}},"63":{"start":{"line":174,"column":8},"end":{"line":174,"column":27}},"64":{"start":{"line":175,"column":8},"end":{"line":190,"column":9}},"65":{"start":{"line":176,"column":12},"end":{"line":176,"column":62}},"66":{"start":{"line":177,"column":12},"end":{"line":181,"column":14}},"67":{"start":{"line":184,"column":12},"end":{"line":189,"column":14}},"68":{"start":{"line":191,"column":8},"end":{"line":191,"column":30}},"69":{"start":{"line":201,"column":8},"end":{"line":201,"column":27}},"70":{"start":{"line":202,"column":8},"end":{"line":219,"column":9}},"71":{"start":{"line":203,"column":25},"end":{"line":203,"column":74}},"72":{"start":{"line":204,"column":12},"end":{"line":204,"column":29}},"73":{"start":{"line":205,"column":12},"end":{"line":205,"column":31}},"74":{"start":{"line":206,"column":12},"end":{"line":206,"column":87}},"75":{"start":{"line":207,"column":12},"end":{"line":211,"column":14}},"76":{"start":{"line":214,"column":12},"end":{"line":218,"column":14}},"77":{"start":{"line":220,"column":8},"end":{"line":220,"column":30}},"78":{"start":{"line":223,"column":0},"end":{"line":223,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":35,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":18},"end":{"line":41,"column":5}},"line":39},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":19},"end":{"line":50,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":19},"end":{"line":57,"column":5}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":41},"end":{"line":96,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":26},"end":{"line":124,"column":5}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":20},"end":{"line":167,"column":5}},"line":129},"13":{"name":"(anonymous_13)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":28},"end":{"line":192,"column":5}},"line":173},"14":{"name":"(anonymous_14)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":39},"end":{"line":221,"column":5}},"line":200}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"13":{"loc":{"start":{"line":69,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":94,"column":9}},{"start":{"line":69,"column":8},"end":{"line":94,"column":9}}],"line":69},"14":{"loc":{"start":{"line":103,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":122,"column":9}},{"start":{"line":103,"column":8},"end":{"line":122,"column":9}}],"line":103},"15":{"loc":{"start":{"line":132,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":165,"column":9}},{"start":{"line":132,"column":8},"end":{"line":165,"column":9}}],"line":132},"16":{"loc":{"start":{"line":134,"column":12},"end":{"line":157,"column":13}},"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":157,"column":13}},{"start":{"line":134,"column":12},"end":{"line":157,"column":13}}],"line":134},"17":{"loc":{"start":{"line":175,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":190,"column":9}},{"start":{"line":175,"column":8},"end":{"line":190,"column":9}}],"line":175},"18":{"loc":{"start":{"line":202,"column":8},"end":{"line":219,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":219,"column":9}},{"start":{"line":202,"column":8},"end":{"line":219,"column":9}}],"line":202}},"s":{"0":1,"1":101,"2":101,"3":101,"4":47,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":101,"18":101,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":20,"27":6,"28":1,"29":12,"30":12,"31":6,"32":6,"33":6,"34":6,"35":4,"36":4,"37":2,"38":6,"39":6,"40":6,"41":6,"42":5,"43":5,"44":5,"45":5,"46":1,"47":6,"48":4,"49":4,"50":4,"51":2,"52":2,"53":2,"54":2,"55":6,"56":6,"57":6,"58":6,"59":2,"60":0,"61":2,"62":4,"63":2,"64":2,"65":1,"66":1,"67":1,"68":2,"69":2,"70":2,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":2,"78":1},"f":{"0":101,"1":47,"2":0,"3":1,"4":0,"5":1,"6":1,"7":20,"8":6,"9":12,"10":6,"11":6,"12":4,"13":2,"14":2},"b":{"0":[1,1,1],"1":[1,0],"2":[101,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[101,0],"11":[101,101],"12":[1,5],"13":[4,2],"14":[5,1],"15":[2,2],"16":[2,0],"17":[1,1],"18":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/NotesApp.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct11-async-sockets-stephaniearismendi/src/NotesApp.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport {ResponseTypes} from './types';\nimport {NotesType} from './types';\n\n/**\n * Class establishing the pattern that each note will follow\n */\nexport class Notes {\n    private _path:string = ' ';\n    private _response:ResponseTypes = {\n      user: '',\n      state: 0,\n      type: 'list',\n    };\n    constructor() {\n    }\n    /**\n     * Path Setter\n     */\n    private setPath(user:string):void {\n      this._path = `./Notas/${user}`;\n    }\n    /**\n     * Method that creates a directory to store the notes\n     * of each user. First check if the directory already exists.\n     */\n    private createFolder() {\n      if (!fs.existsSync(this._path)) {\n        fs.mkdirSync(this._path, {recursive: true});\n      }\n    }\n    /**\n     * Method that reads a JSON file and returns the content\n     */\n    private readJSON(path:string):any {\n      const nota:any = JSON.parse(fs.readFileSync(path, 'utf8'));\n      return nota;\n    }\n    /**\n     * Method that creates a note\n     * @param user name of the user\n     * @param title title of the note\n     * @param body body of the note\n     * @param color color of the note\n     */\n    public createNote(user:string, title:string, body:string, color:string):ResponseTypes {\n      this.setPath(user);\n      this.createFolder();\n      const filepath = `${this._path}/${title}.json`;\n      if (!fs.existsSync(filepath)) {\n        fs.writeFileSync(this._path + '/' + title + '.json', JSON.stringify({\n          title: title,\n          body: body,\n          color: color,\n        }));\n        this._response = {\n          user: user,\n          state: 1,\n          type: 'add',\n          title: title,\n          body: body,\n          color: color,\n        };\n      } else {\n        this._response = {\n          user: user,\n          state: 0,\n          type: 'add',\n          title: title,\n          body: body,\n          color: color,\n          error: 'The note already exists.',\n        };\n      }\n      return this._response;\n    }\n    /**\n     * Method that searches for a note and prints it\n     */\n    public readNote(user:string, title:string):ResponseTypes {\n      this.setPath(user);\n      const notePath:string = this._path + '/' + title + '.json';\n      if (fs.existsSync(notePath)) {\n        const nota:any = this.readJSON(notePath);\n        const body = nota.body;\n        const color = nota.color;\n        this._response = {\n          state: 1,\n          type: 'read',\n          title: title,\n          body: body,\n          color: color,\n        };\n      } else {\n        this._response = {\n          state: 0,\n          type: 'read',\n          title: title,\n          error: 'The note does not exist.',\n        };\n      }\n      return this._response;\n    }\n    /**\n     * Method that lists all the notes of a user\n     * @param user name of the user\n     */\n    public listNotes(user:string):ResponseTypes {\n      const Notes:NotesType[] = [];\n      this.setPath(user);\n      if (fs.existsSync(this._path)) {\n        const notasDir = fs.readdirSync(this._path);\n        if (notasDir.length > 0) {\n          for (let i:number = 0; i < notasDir.length; i++) {\n            const nota = this.readJSON(this._path + '/' + notasDir[i]);\n            const title = nota.title;\n            const color = nota.color;\n            Notes.push({\n              title: title,\n              color: color,\n              body: nota.body,\n            });\n          }\n          this._response = {\n            state: 1,\n            type: 'list',\n            notes: Notes,\n          };\n        } else {\n          this._response = {\n            state: 0,\n            type: 'list',\n            error: 'No notes to show.',\n          };\n        }\n      } else {\n        this._response = {\n          state: 0,\n          type: 'list',\n          error: `User ${user} have not created any note yet.`,\n        };\n      }\n      return this._response;\n    }\n    /**\n     * Method that deletes a note\n     * @param user name of the user\n     * @param title title of the note\n     */\n    public deleteNote(user:string, title:string):ResponseTypes {\n      this.setPath(user);\n      if (fs.existsSync(this._path + '/' + title + '.json')) {\n        fs.unlinkSync(this._path + '/' + title + '.json');\n        this._response = {\n          state: 1,\n          type: 'remove',\n          title: title,\n        };\n      } else {\n        this._response = {\n          state: 0,\n          type: 'remove',\n          title: title,\n          error: 'The note does not exist.',\n        };\n      }\n      return this._response;\n    }\n    /**\n     * Method that updates a note\n     * @param user name of the user\n     * @param title title of the note\n     * @param body new body of the note\n     * @param color new color of the note\n     */\n    public editNote(user:string, title:string, body:string, color:string):ResponseTypes {\n      this.setPath(user);\n      if (fs.existsSync(this._path + '/' + title + '.json')) {\n        const nota:any = this.readJSON(this._path + '/' + title + '.json');\n        nota.body = body;\n        nota.color = color;\n        fs.writeFileSync(this._path + '/' + title + '.json', JSON.stringify(nota));\n        this._response = {\n          state: 1,\n          type: 'modify',\n          title: title,\n        };\n      } else {\n        this._response = {\n          state: 0,\n          type: 'modify',\n          error: 'You cannot edit a note that does not exist.',\n        };\n      }\n      return this._response;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e1924b1f0fd26e8727d17e0c83c63bbe0a43503e","contentHash":"d2a80d160e4e15fbe708f027b1ab15723ce28dd9380c16f402df5aacb13f9bd4"}}